on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      # Create release
      - name: Create release
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: node
          token: ${{ secrets.GH_TOKEN }}

      # Checkout
      - name: Checkout
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v3

      # Install Node.js
      - name: Install Node.js
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      # Install pnpm
      - name: Install pnpm
        if: ${{ steps.release.outputs.release_created }}
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8
          run_install: false

      # Get pnpm store directory
      - name: Get pnpm store directory
        if: ${{ steps.release.outputs.release_created }}
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      # Setup pnpm cache
      - name: Setup pnpm cache
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install dependencies
      - name: Install dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm install

      # Build for production
      - name: Build for production
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm run build

      # Upload package to release
      # https://github.com/philips-labs/terraform-aws-github-runner/blob/main/.github/workflows/release.yml#L46
      - name: Upload package.zip to the release
        if: ${{ steps.release.outputs.releases_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} "package.zip"